<h1>簡介</h1>
<p>2018 Fall 計算機程式與電腦輔助設計實習課程分組網站</p>
<h2>CMSimfly 網站</h2>
<p>各組必須自行更改 Config 中的網站標題, 且每次完成近端動態網頁編輯後, 以 generate_pages 按鈕, 將動態網頁資料轉為靜態網頁資料, 之後再新增、提交並推送到遠端倉儲.</p>
<h2>reveal 投影片</h2>
<p>以 <a href="http://www.leoeditor.com/">Leo Editor</a> 開啟 config/reveal.leo</p>
<h2>pelican 網誌</h2>
<p>以 <a href="http://www.leoeditor.com/">Leo Editor</a> 開啟 config/pelican.leo </p>
<p>各分組必須自行更改 @edit pelicanconf.py 中的 AUTHOR 與 SITENAME</p>
<p>更改 @edit publishconf.py 中的 SITEURL</p>
<h1>課程介紹</h1>
<h3>gti基本指令</h3>
<p><span style="color: #ff0000;">mkdir name</span> 創建一個文檔夾</p>
<p><span style="color: #ff0000;">rm file</span> 刪除</p>
<p><span style="color: #ff0000;">cd name</span> 進入文檔夾</p>
<p><span style="color: #ff0000;">pwd</span> 查看當前目錄</p>
<p><span style="color: #ff0000;">git init</span><span> </span><span>把當前目錄變成</span>git<span>可以管理的倉庫 生成</span><span>.git</span><span>文檔夾</span></p>
<p><span style="color: #ff0000;">git add name</span><span> </span><span>把文檔添加到暫存區</span>stage</p>
<p><span style="color: #ff0000;">git commit -m</span> “ ”<span> </span><span>把暫存區所有文檔提交到</span>git<span>當前分支上（本地倉庫）</span></p>
<p><span style="color: #ff0000;">git status </span><span>查看當前</span>git<span>倉庫狀態</span></p>
<p><span style="color: #ff0000;">git diff file</span><span> </span><span>查看修改的文檔內容</span></p>
<p><span style="color: #ff0000;">git log</span><span> </span><span>查看從最近到最遠的提交日誌</span></p>
<p><span style="color: #ff0000;">git reset --hard</span><span> </span><span>版本號  回退到某版本（</span><span>HEAD</span><span>指向當前版本）</span></p>
<pre class="highlight"><span><span style="color: #ff0000;">git push origin HEAD --force</span> 上傳目前(hard)版本</span></pre>
<p><span style="color: #ff0000;">git reflog</span>  <span>查看命令操作歷史</span></p>
<p><span style="color: #ff0000;">git checkout -- file</span>    <span>丟棄工作區文檔的修改</span></p>
<p><span style="color: #ff0000;">git reset HEAD file  </span>  <span>丟棄暫存區的文檔</span></p>
<p><span style="color: #ff0000;">git rm file</span>  <span>刪除工作區文檔後還需刪除</span>git<span>中的文檔</span></p>
<p><span style="color: #ff0000;">git checkout --file</span>  <span>恢復誤刪的</span>git<span>文檔</span></p>
<p style="color: #626262;"><span style="color: #ff0000;">git remote add origin addres<span style="background-color: #ffffff;">s</span></span><span style="color: #626262;"> 關聯一個遠程倉庫   </span></p>
<p><span style="color: #ff0000;"> git push -u origin master</span> 第一次推送代碼到遠程倉庫</p>
<p><span>       （</span>-u<span>會把本地倉庫</span><span>master</span><span>分支和遠程倉庫的</span>master<span>分支</span><span>關聯起來）</span></p>
<p><span style="background-color: #ffffff; color: #626262;"><span style="color: #ff0000;">git clone address</span> </span>從遠程倉庫克隆代碼到本地 </p>
<p><span style="background-color: #ffffff; color: #ff0000;">git branch name </span>創建分支 </p>
<p><span style="color: #ff0000;">git checkout name </span><span style="background-color: #ffffff; color: #626262;">  </span>切換分支    </p>
<p><span style="background-color: #ffffff; color: #ff0000;">git branch</span> 查看分支 </p>
<p><span style="background-color: #ffffff; color: #626262;"><span style="color: #ff0000;">git checkout -b name</span> </span>創建分支並切換到分支上　　</p>
<p><span style="background-color: #ffffff; color: #ff0000;">git merge name </span>合併指定分支到當前分支上 </p>
<p><span style="background-color: #ffffff; color: #ff0000;">git branch -d name </span>合併後刪除分支 </p>
<p><strong>合併時出現衝突要手動解決衝突，再提交，最後合併</strong>。</p>
<p><span style="background-color: #ffffff; color: #ff0000;">git stash </span>將寫到一半的代碼從工作區拿走存起來 </p>
<p><span style="background-color: #ffffff; color: #ff0000;">git stash pop </span><span>恢復隱藏的代碼到工作區並刪除隱藏位置的代碼</span><span> </span> </p>
<p><span style="background-color: #ffffff; color: #ff0000;"> </span><span style="background-color: #ffffff; color: #ff0000;">git branch -D name </span>強行刪除一個沒有合併過的分支</p>
<h2>python基本語法</h2>
<p>● ”#”符號後是註解（comment），可以在一列的開頭或中間加入<br/>● reserved word or built-in function (變數取名請避開！)<br/>○     and, exec, not, as, finally, or, assert, for, pass, except<br/>○     break, from, print, class, global, raise, continue, if, return<br/>○     def, import, try, del, in, while, elif, is, with, else, lambda, yield<br/>● 縮排視為不同的block (在IF判斷式或迴圈的段落中使用)<br/>○     縮排可以用tab或是數個空格(至少一個空格)。<br/>○     空格的數量不同，視為不同的block (bug很容易因為這一點而發生)<br/>● python的每個變數視為一個object。</p>
<p><span><strong>Python variables</strong></span></p>
<p>● 不需要事先宣告變數，直接用”=“ assign value（賦值）即可。<br/>○     x=3.14 → 實數變數<br/>● 變數類型（data type）根據被賦予的值決定（之後如果被assign不同類型的數<br/>值，該變數的類型就會直接改變）<br/>○     x=‘text’ → 字串變數<br/>● 確認變數的data type: type(x)<br/>● 變數名稱中的大小寫要完全一致（a、A會當作不同的變數）<br/>● python可以在同一個指令中對多個變數賦值<br/>○     x, y = 2, 1 → x = 2, y = 1<br/>● 若想要移除變數，使用del x y<br/>● 常見的data type: number, string, list, tuple, boolean</p>
<p><span><strong>Simple input/output</strong></span></p>
<p>● input(“…”) 在螢幕上顯示字串，並等待使用者輸入字串<br/>○     x = input (“input your name: “)  螢幕上會顯示訊息 input your name:，<br/>       使用者輸入的內容，會用字串類型存到x變數<br/>○    就算使用者輸入數字，仍然是以字串類型儲存（之後會介紹如何切割字串<br/>     （split），轉為數值）<br/>● print (...) 顯示在螢幕上<br/>○     e.g. print (“Hello World!!”)<br/>○     若要一次輸出多個變數至螢幕上，直接以逗號分開 e.g. print(x,y,z)<br/>○     也可以format output</p>
<p><span><strong>Python variable types</strong></span></p>
<p>● Number 數值<br/>○     int : a = 11<br/>○     float: a = 1.1e-18<br/>○     complex: a = 4. + 7j<br/>● String 字串 （ 用“ “ 或 ‘ ‘夾起）<br/>○     e.g. x = “Hello World!” or x = ‘Hello World!’<br/>○     取出字串的局部：x [0:3]<br/>■         注意：index 從 0 開始計算！<br/>■         [a:b] -- begin at index a and end before index b (e.g., x[0:3] -&gt; “Hel”)<br/>○     不可以對字串的局部做更改，e.g. x[0:3] =”Yo!” (這個是錯誤的語法)<br/>● Boolean 邏輯<br/>○     只有True, False兩種值，根據邏輯判斷（IF condition）的結果決定<br/>○     兩個boolean 變數做運算，會以True=1, False=0 做整數運算</p>
<p><span><strong>Python variables: list and tuple</strong></span></p>
<p>● list, tuple<br/>○     類似陣列的概念，但可以混雜儲存不同型態的資料，如下所示<br/>○     List： x = [ 'abcd', 786 , 2.23, 'john', 70.2]<br/>○     Tuple: y = ( 'abcd', 786 , 2.23, 'john', 70.2)<br/>○     assignment: list 使用 [], tuple 使用(), 每個元素都用”，”分開<br/>○     list 的大小及元素可以改變。tuple則不行 (類似常數陣列)<br/>○     sub-list 或是 sub-tuple語法類似取出字串局部：<br/>            x[0:2]  ['abcd', 786 ]<br/>            y[2:4]  (786, 2.23 )</p>
<p><span><strong>Convert data type</strong></span></p>
<p>有時候需要不同型態的資料轉換，例如將字串”10”轉成整數10<br/>下列為常用的built-in function<br/>● int (x)<br/>● float (x)<br/>● str (x)</p>
<p><span><strong>Arithmetic Operators</strong></span></p>
<p>● 加法 +<br/>○     string 相加：形成新的字串                                  ● 次方 **<br/>■         x = “Hello”, y = “World”                                        ● 取餘數 %<br/>■         c = x + y → c = “HelloWorld”                            ● 整除至最近整數 //<br/>● 減法 -                                                                                      ○   相除後取最接近的整數（整實數），<br/>● 乘法 *                                                                                             結果的類型取決於兩個變數的類型：<br/>○     string 乘一個數字(int)：字串重複幾次                    9//2 = 4<br/>■         x = “Yo!”                                                                                   9.0//2.0 = 4.0<br/>■         y = x * 3 → y = “Yo!Yo!Yo!”                                           11.0//3 = 4.0<br/>● 除法 /<br/>○     注意：兩個整數相除，結果是實數<br/>■         x = 21, y = 10<br/>■         c = x / y → c = 2.1</p>
<p><strong><span>Arithmetic Operators</span></strong></p>
<p>● 如果要進行下面的運算 a= a+b （用a+b的結果為a重新賦值）<br/>● 在python可以改寫成： a += b<br/>● 所以算術運算符號可以有<br/>        +=     -=     *=     /=     %=     **=     //=</p>
<p><span><strong>Modules or package （也稱為library）</strong></span></p>
<p>● ”modules” or “packages”：通常是其他人寫好的函數或指令，打包成一個「工具庫」<br/> 方便分享使用。（非python內建，可能會需要下載安裝）<br/>○     本課程會用到的library: numpy (array), matplotlib (基本繪圖), basemap (地圖),<br/>         netCDF (讀nc檔)<br/>● 使用方式：import module_name<br/>○     在執行工具庫內的指令之前，就要先把modules 引進來（不然python不會認得<br/>        非內建的指令）<br/>○     使用工具庫內的指令：module_name.function (or module_name.constant)<br/>○     可以使用import module_name as xxx (xxx是你自己取的縮寫）<br/>        使用指令的語法就簡化成xxx.function，例如:<br/>             import math as m</p>
<h1>組員操作影片</h1>
<p>每週各分組組員必須將參與分組協同過程之電腦操作流程錄成影片後, 上傳至各自的 Youtube 帳號區, 並嵌入各分組網站頁面中.</p>
<h2>Week1</h2>
<p><span>1.建立github帳號</span></p>
<p><span>2.建立倉儲: s40723120.github.io</span></p>
<p><span>2.git clone  https://github.com/mdecourse/2018fall</span></p>
<p><span>3.git clone  https://github.com/s40723120/s40723120.github.io</span></p>
<p><span>4.從2018fall資料夾複製裡面的檔案，排除.git和README.me，並貼到自己的資料夾內</span></p>
<p><span>5.git status(檢查狀態)&gt;git add .(增加)&gt;git commit -m "名稱"( 提交)&gt;git push (推送)</span></p>
<p><span><iframe allowfullscreen="allowfullscreen" height="314" src="//www.youtube.com/embed/5Ssi2CkPLbY" width="560"></iframe></span></p>
<h2>Week2</h2>
<p><span>學習使用ShareX截圖(ctrl+print scr) 錄製影印(shift+print scr) 並跟新作業倉儲</span></p>
<p><span>在site-s40723210的 settings &gt; Branches &gt; 把branches改為gh-pages</span></p>
<p><span><img alt="" height="351" src="/images/chrome_2018-10-19_14-02-20.png" width="719"/></span></p>
<p></p>
<h2>Week3</h2>
<p>git 基本操作練習<yt-formatted-string class="style-scope ytd-video-primary-info-renderer">。</yt-formatted-string></p>
<p><iframe allowfullscreen="allowfullscreen" height="314" src="//www.youtube.com/embed/1kIoece6LS0" width="560"></iframe></p>
<h2>Week4</h2>
<p><span>說明如何管理個人網誌。(以 Leo Editor</span><span> 開啟 config/pelican.leo )</span></p>
<p><span><iframe allowfullscreen="allowfullscreen" height="314" src="//www.youtube.com/embed/KBmdV8lTe8Y" width="560"></iframe></span></p>
<h2>Week5</h2>
<p><span>說明如何管理個人簡報。(以 Leo Editor</span><span> 開啟 config/reveal.leo )</span></p>
<p><span><iframe allowfullscreen="allowfullscreen" height="314" src="//www.youtube.com/embed/T6o7OI0G32s" width="560"></iframe></span></p>
<h2>Week6</h2>
<p>說明如用在簡報中插入影片(<span>以 Leo Editor</span><span> 開啟 config/reveal.leo)</span></p>
<p><span><iframe allowfullscreen="allowfullscreen" height="314" src="//www.youtube.com/embed/KnbEDMW3hh8" width="560"></iframe></span></p>
<h2>Week7</h2>
<p>說明如何更新README.md</p>
<p><iframe allowfullscreen="allowfullscreen" height="314" src="//www.youtube.com/embed/7A6O1MIXLhg" width="560"></iframe></p>
<h2>Week8</h2>
<p>說明如何更新flaskapp.py</p>
<p>進入<a href="https://github.com/chiamingyen/cmsimfly">https://github.com/chiamingyen/cmsimfly</a></p>
<p>點選flaskapp.py&gt;Raw&gt;全選 複製</p>
<p>打開自己倉儲的flaskapp.py&gt;在全部刪除 貼上</p>
<p><iframe allowfullscreen="allowfullscreen" height="314" src="//www.youtube.com/embed/UbFvVK7YUqg" width="560"></iframe></p>
<p></p>
<h1>Python 手冊</h1>
<p>計算機程式教材:  <a href="http://mde.tw/cp2018/content/">http://mde.tw/cp2018/content/</a> </p>
<p>可攜程式下載: <a href="https://drive.google.com/file/d/1DWtyoUhl8CycKJ8uulB3viRXE39KqpE1/view?usp=sharing">p37.7z</a></p>
<h1>OnShape 手冊</h1>
<p><a href="https://www.onshape.com/">https://www.onshape.com/</a> </p>
<p>電腦輔助設計實習課程教材: <a href="http://mde.tw/cadp2018/content/">http://mde.tw/cadp2018/content/</a> </p>
<h1>Fusion 360</h1>
<p><a href="https://www.autodesk.com/products/fusion-360/students-teachers-educators">https://www.autodesk.com/products/fusion-360/students-teachers-educators</a> </p>